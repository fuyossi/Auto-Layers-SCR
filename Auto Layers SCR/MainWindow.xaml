<Window x:Class="Auto_Layers_SCR.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Auto_Layers_SCR"
        mc:Ignorable="d"
        Title="Auto Layers SCR" Height="500" Width="1000" Icon="/Auto Layers SCRicon.png" FontFamily="Arial" MinWidth="500" MinHeight="400" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF87CEEB"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF87CEEB"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Menu VerticalAlignment="Top" Background="White" FontFamily="Arial">
            <MenuItem Header="File">
                <MenuItem Header="Generate..." Click="MenuItem_Click" FontFamily="Arial"/>
                <Separator FontFamily="Arial"/>
                <MenuItem Header="Load from JSON file..." Click="MenuItem_Click_1" FontFamily="Arial"/>
                <MenuItem Header="Save as JSON file..." Click="MenuItem_Click_2" FontFamily="Arial"/>
                <Separator FontFamily="Arial"/>
                <MenuItem Header="Quit" Click="MenuItem_Click_3" FontFamily="Arial"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About Auto Layers SCR..." Click="MenuItem_Click_4" FontFamily="Arial"/>
            </MenuItem>
        </Menu>
        <TextBlock HorizontalAlignment="Center" Margin="0,25,0,0" TextWrapping="Wrap" Text="Enter the layer information in the table and click the Generate button." VerticalAlignment="Top" TextAlignment="Center" />
        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="Alternatively, you can use &quot;File&quot; -&gt; &quot;Load from JSON file&quot; from the menu bar to load the previously saved layer information." VerticalAlignment="Top" Margin="0,50,0,0" TextAlignment="Center" />
        <DataGrid
            x:Name="DataGrid1"
            Margin="0,85,0,150"
            AutoGenerateColumns="False"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            EnableColumnVirtualization="True" 
            EnableRowVirtualization="True" 
            VirtualizingPanel.IsVirtualizing="True" 
            VirtualizingPanel.VirtualizationMode="Recycling"
            >
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Layer name&#10;(N)(Required)" Width="120" Binding="{Binding Layername}" />
                <DataGridTemplateColumn Header="Display&#10;(ON/OFF)" Width="65">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Display, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Freeze&#10;(F/T)" Width="65">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Freeze, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Lock&#10;(LO/U)" Width="65">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Lock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Printing&#10;(P/N)" Width="65">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Printing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Color&#10;(C)" Width="65" Binding="{Binding Color}" />
                <DataGridTemplateColumn Width="120" Header="Line type&#10;(L)">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Linetype}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="cmbLinetype" IsEditable="True" Text="{Binding Linetype}">
                                <ComboBoxItem Content="CENTER"/>
                                <ComboBoxItem Content="CENTER2"/>
                                <ComboBoxItem Content="DASHED"/>
                                <ComboBoxItem Content="DASHED2"/>
                                <ComboBoxItem Content="DOT"/>
                                <ComboBoxItem Content="DOT2"/>
                                <ComboBoxItem Content="HIDDEN"/>
                                <ComboBoxItem Content="HIDDEN2"/>
                                <ComboBoxItem Content="PHANTOM"/>
                                <ComboBoxItem Content="PHANTOM2"/>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Line weight&#10;(LW)" Width="100" Binding="{Binding Lineweight}" />
                <DataGridTextColumn Header="Permeability&#10;(TR)" Width="100" Binding="{Binding Permeability}" />
                <DataGridTextColumn Header="Description&#10;(D)" Width="200" Binding="{Binding Description}" />
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="btnAdd" Click="btnAdd_Click"  Content="Add row" HorizontalAlignment="Left" Margin="20,0,0,105" VerticalAlignment="Bottom" Width="75" Height="30"/>
        <Button Click="Button_Click_1" Content="Delete selected row" HorizontalAlignment="Left" Margin="125,0,0,105" VerticalAlignment="Bottom" Width="120" Height="30"/>
        <Button Click="Button_Click" Style="{DynamicResource ButtonStyle1}" Content="Generate" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,25" Width="100" Height="50" Background="DodgerBlue" FontSize="18"/>

    </Grid>
</Window>
